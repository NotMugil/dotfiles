(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly false :spacing 5
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}" :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""}" )
            )
          )
        )
      )
    )
  )

(defwidget title []
  (box
    (label :text "${window}" :class "title"
    )
  )
)

(defwidget seperator []
  (box
    (label :text "|" :class "seperator"
    )
  )
)

(defwidget clock []
  (box
    :class "time"
    :halign "end"
    :orientation "h"
    (eventbox
      :onclick "sh ~/.config/eww/scripts/toggleCalender"
      :cursor "pointer"
      (label
        :class "bar-time"
        :text "${hour}:${minute} ${period}"
      )
    )
  )
)

(deflisten speakers :initial '{ "volume": 0, "muted": "false" }' "~/.config/eww/scripts/volume.sh")

(defwidget speakers []
    (box :class "speakers"
      :space-evenly false
      :spacing 5
      (button :class "icon ${ speakers.volume > 100 ? 'over' : '' } ${ speakers.muted ? 'muted' : '' }"
        :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"
        (label :text {
          speakers.muted ? "󰖁 ${speakers.volume}%":
          speakers.volume == 0 ? "󰕾 ${speakers.volume}%":
          speakers.volume < 33 ? "󰖀 ${speakers.volume}%":
          "󰕿 ${speakers.volume}%"
        }))
    )

)

(defwidget powermenu []
  (eventbox
    :onclick "sh ~/.config/eww/scripts/togglePowermenu"
    :cursor "pointer"
    (box :class "powerButton"
      (label
        :text " 󰐥 "
      )
    )
  )
)


(defwidget notificationcenter []
  (eventbox
    :onclick "sh ~/.config/eww/scripts/toggleControlCenter"
    :cursor "pointer"
    (box
      :class ""
      (clock)
    )
  )
)


(defwidget left []
   (box
     :class "ccButton"
     :halign "start"
     :valign "center"
     :space-evenly false
     :spacing 10
     (eventbox
        :onclick "sh ~/.config/eww/scripts/toggleLauncher"
        :onhover ""
        :cursor "pointer"
        (label
          :text " 󰣇 "
        )
      )
    (seperator)
    (title)
    )
)

(defwidget center []
  (box
    :class ""
    :halign "center"
    :valign "center"
    :orientation "h"
    :space-evenly false
    (workspaces)
  )
)

(defwidget right []
  (box
    :class ""
    :orientation "h"
    :space-evenly false
    :spacing 10
    :halign "end"
    :valign "center"
    (speakers)
    (seperator)
    (notificationcenter)
    (seperator)
    (powermenu)
  )
)



(defwidget bar []
  (centerbox
     :class "bar"
     :orientation "h"
     (left)
     (center)
     (right)
   )
)
